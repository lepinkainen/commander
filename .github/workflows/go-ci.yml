---
name: Go CI

'on':
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@70a5ac30729c76bd992157778526e6eb5e390073  # v4.5.0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.2.0
        with:
          go-version: "1.21"
          cache: true  # Automatically caches go.mod/go.sum dependencies

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611  # v2.0.0
        with:
          version: 3.x

      - name: Install Go tools
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run tests with coverage
        run: task test-ci

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@70a5ac30729c76bd992157778526e6eb5e390073  # v4.5.0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.2.0
        with:
          go-version: "1.21"
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9  # v8.0.0
        with:
          version: latest
          args: --timeout=5m

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ["1.21"]

    steps:
      - uses: actions/checkout@70a5ac30729c76bd992157778526e6eb5e390073  # v4.5.0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.2.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611  # v2.0.0
        with:
          version: 3.x

      - name: Build
        run: task build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: commander-${{ matrix.os }}
          path: build/

      - name: Upload coverage reports to Codecov (Optional)
        uses: codecov/codecov-action@6d798873df2b1b8e5846dba6fb86631229fbcb17  # v4.6.0
        if: success() && matrix.os == 'ubuntu-latest' && hashFiles('./coverage.out') != ''
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
